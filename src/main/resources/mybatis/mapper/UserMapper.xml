<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.it.demo.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.it.demo.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="entry_time" property="entryTime" jdbcType="TIMESTAMP" />
    <result column="entry_grade" property="entryGrade" jdbcType="VARCHAR" />
    <result column="entry_salary" property="entrySalary" jdbcType="DECIMAL" />
    <result column="current_grade" property="currentGrade" jdbcType="VARCHAR" />
    <result column="current_salary" property="currentSalary" jdbcType="DECIMAL" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="psot" property="psot" jdbcType="VARCHAR" />
    <result column="lately_change_salary_time" property="latelyChangeSalaryTime" jdbcType="VARCHAR" />
    <result column="ontrial_salary" property="ontrialSalary" jdbcType="DECIMAL" />
    <result column="graduation_school" property="graduationSchool" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="graduation_time" property="graduationTime" jdbcType="TIMESTAMP" />
    <result column="entry_before_years" property="entryBeforeYears" jdbcType="DECIMAL" />
    <result column="entry_remarks" property="entryRemarks" jdbcType="VARCHAR" />
    <result column="current_years" property="currentYears" jdbcType="DECIMAL" />
    <result column="whether_extrapolation" property="whetherExtrapolation" jdbcType="VARCHAR" />
    <result column="recruit_contribution_one" property="recruitContributionOne" jdbcType="VARCHAR" />
    <result column="recruit_contribution_two" property="recruitContributionTwo" jdbcType="VARCHAR" />
    <result column="is_job" property="isJob" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, sex, entry_time, entry_grade, entry_salary, current_grade, current_salary, 
    department, psot, lately_change_salary_time, ontrial_salary, graduation_school, major, 
    education, graduation_time, entry_before_years, entry_remarks, current_years, whether_extrapolation, 
    recruit_contribution_one, recruit_contribution_two, is_job
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.it.demo.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_data
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_data
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.it.demo.model.UserExample" >
    delete from user_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.it.demo.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_data (user_name, sex, entry_time, 
      entry_grade, entry_salary, current_grade, 
      current_salary, department, psot, 
      lately_change_salary_time, ontrial_salary, 
      graduation_school, major, education, 
      graduation_time, entry_before_years, entry_remarks, 
      current_years, whether_extrapolation, recruit_contribution_one, 
      recruit_contribution_two, is_job)
    values (#{userName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{entryTime,jdbcType=TIMESTAMP}, 
      #{entryGrade,jdbcType=VARCHAR}, #{entrySalary,jdbcType=DECIMAL}, #{currentGrade,jdbcType=VARCHAR}, 
      #{currentSalary,jdbcType=DECIMAL}, #{department,jdbcType=VARCHAR}, #{psot,jdbcType=VARCHAR}, 
      #{latelyChangeSalaryTime,jdbcType=VARCHAR}, #{ontrialSalary,jdbcType=DECIMAL}, 
      #{graduationSchool,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{graduationTime,jdbcType=TIMESTAMP}, #{entryBeforeYears,jdbcType=DECIMAL}, #{entryRemarks,jdbcType=VARCHAR}, 
      #{currentYears,jdbcType=DECIMAL}, #{whetherExtrapolation,jdbcType=VARCHAR}, #{recruitContributionOne,jdbcType=VARCHAR}, 
      #{recruitContributionTwo,jdbcType=VARCHAR}, #{isJob,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.it.demo.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        user_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="entryTime != null" >
        entry_time,
      </if>
      <if test="entryGrade != null" >
        entry_grade,
      </if>
      <if test="entrySalary != null" >
        entry_salary,
      </if>
      <if test="currentGrade != null" >
        current_grade,
      </if>
      <if test="currentSalary != null" >
        current_salary,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="psot != null" >
        psot,
      </if>
      <if test="latelyChangeSalaryTime != null" >
        lately_change_salary_time,
      </if>
      <if test="ontrialSalary != null" >
        ontrial_salary,
      </if>
      <if test="graduationSchool != null" >
        graduation_school,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="graduationTime != null" >
        graduation_time,
      </if>
      <if test="entryBeforeYears != null" >
        entry_before_years,
      </if>
      <if test="entryRemarks != null" >
        entry_remarks,
      </if>
      <if test="currentYears != null" >
        current_years,
      </if>
      <if test="whetherExtrapolation != null" >
        whether_extrapolation,
      </if>
      <if test="recruitContributionOne != null" >
        recruit_contribution_one,
      </if>
      <if test="recruitContributionTwo != null" >
        recruit_contribution_two,
      </if>
      <if test="isJob != null" >
        is_job,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null" >
        #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryGrade != null" >
        #{entryGrade,jdbcType=VARCHAR},
      </if>
      <if test="entrySalary != null" >
        #{entrySalary,jdbcType=DECIMAL},
      </if>
      <if test="currentGrade != null" >
        #{currentGrade,jdbcType=VARCHAR},
      </if>
      <if test="currentSalary != null" >
        #{currentSalary,jdbcType=DECIMAL},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="psot != null" >
        #{psot,jdbcType=VARCHAR},
      </if>
      <if test="latelyChangeSalaryTime != null" >
        #{latelyChangeSalaryTime,jdbcType=VARCHAR},
      </if>
      <if test="ontrialSalary != null" >
        #{ontrialSalary,jdbcType=DECIMAL},
      </if>
      <if test="graduationSchool != null" >
        #{graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="graduationTime != null" >
        #{graduationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryBeforeYears != null" >
        #{entryBeforeYears,jdbcType=DECIMAL},
      </if>
      <if test="entryRemarks != null" >
        #{entryRemarks,jdbcType=VARCHAR},
      </if>
      <if test="currentYears != null" >
        #{currentYears,jdbcType=DECIMAL},
      </if>
      <if test="whetherExtrapolation != null" >
        #{whetherExtrapolation,jdbcType=VARCHAR},
      </if>
      <if test="recruitContributionOne != null" >
        #{recruitContributionOne,jdbcType=VARCHAR},
      </if>
      <if test="recruitContributionTwo != null" >
        #{recruitContributionTwo,jdbcType=VARCHAR},
      </if>
      <if test="isJob != null" >
        #{isJob,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.it.demo.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_data
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.entryTime != null" >
        entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entryGrade != null" >
        entry_grade = #{record.entryGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.entrySalary != null" >
        entry_salary = #{record.entrySalary,jdbcType=DECIMAL},
      </if>
      <if test="record.currentGrade != null" >
        current_grade = #{record.currentGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.currentSalary != null" >
        current_salary = #{record.currentSalary,jdbcType=DECIMAL},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.psot != null" >
        psot = #{record.psot,jdbcType=VARCHAR},
      </if>
      <if test="record.latelyChangeSalaryTime != null" >
        lately_change_salary_time = #{record.latelyChangeSalaryTime,jdbcType=VARCHAR},
      </if>
      <if test="record.ontrialSalary != null" >
        ontrial_salary = #{record.ontrialSalary,jdbcType=DECIMAL},
      </if>
      <if test="record.graduationSchool != null" >
        graduation_school = #{record.graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationTime != null" >
        graduation_time = #{record.graduationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entryBeforeYears != null" >
        entry_before_years = #{record.entryBeforeYears,jdbcType=DECIMAL},
      </if>
      <if test="record.entryRemarks != null" >
        entry_remarks = #{record.entryRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.currentYears != null" >
        current_years = #{record.currentYears,jdbcType=DECIMAL},
      </if>
      <if test="record.whetherExtrapolation != null" >
        whether_extrapolation = #{record.whetherExtrapolation,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitContributionOne != null" >
        recruit_contribution_one = #{record.recruitContributionOne,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitContributionTwo != null" >
        recruit_contribution_two = #{record.recruitContributionTwo,jdbcType=VARCHAR},
      </if>
      <if test="record.isJob != null" >
        is_job = #{record.isJob,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_data
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      entry_grade = #{record.entryGrade,jdbcType=VARCHAR},
      entry_salary = #{record.entrySalary,jdbcType=DECIMAL},
      current_grade = #{record.currentGrade,jdbcType=VARCHAR},
      current_salary = #{record.currentSalary,jdbcType=DECIMAL},
      department = #{record.department,jdbcType=VARCHAR},
      psot = #{record.psot,jdbcType=VARCHAR},
      lately_change_salary_time = #{record.latelyChangeSalaryTime,jdbcType=VARCHAR},
      ontrial_salary = #{record.ontrialSalary,jdbcType=DECIMAL},
      graduation_school = #{record.graduationSchool,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      graduation_time = #{record.graduationTime,jdbcType=TIMESTAMP},
      entry_before_years = #{record.entryBeforeYears,jdbcType=DECIMAL},
      entry_remarks = #{record.entryRemarks,jdbcType=VARCHAR},
      current_years = #{record.currentYears,jdbcType=DECIMAL},
      whether_extrapolation = #{record.whetherExtrapolation,jdbcType=VARCHAR},
      recruit_contribution_one = #{record.recruitContributionOne,jdbcType=VARCHAR},
      recruit_contribution_two = #{record.recruitContributionTwo,jdbcType=VARCHAR},
      is_job = #{record.isJob,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.it.demo.model.User" >
    update user_data
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null" >
        entry_time = #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryGrade != null" >
        entry_grade = #{entryGrade,jdbcType=VARCHAR},
      </if>
      <if test="entrySalary != null" >
        entry_salary = #{entrySalary,jdbcType=DECIMAL},
      </if>
      <if test="currentGrade != null" >
        current_grade = #{currentGrade,jdbcType=VARCHAR},
      </if>
      <if test="currentSalary != null" >
        current_salary = #{currentSalary,jdbcType=DECIMAL},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="psot != null" >
        psot = #{psot,jdbcType=VARCHAR},
      </if>
      <if test="latelyChangeSalaryTime != null" >
        lately_change_salary_time = #{latelyChangeSalaryTime,jdbcType=VARCHAR},
      </if>
      <if test="ontrialSalary != null" >
        ontrial_salary = #{ontrialSalary,jdbcType=DECIMAL},
      </if>
      <if test="graduationSchool != null" >
        graduation_school = #{graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="graduationTime != null" >
        graduation_time = #{graduationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryBeforeYears != null" >
        entry_before_years = #{entryBeforeYears,jdbcType=DECIMAL},
      </if>
      <if test="entryRemarks != null" >
        entry_remarks = #{entryRemarks,jdbcType=VARCHAR},
      </if>
      <if test="currentYears != null" >
        current_years = #{currentYears,jdbcType=DECIMAL},
      </if>
      <if test="whetherExtrapolation != null" >
        whether_extrapolation = #{whetherExtrapolation,jdbcType=VARCHAR},
      </if>
      <if test="recruitContributionOne != null" >
        recruit_contribution_one = #{recruitContributionOne,jdbcType=VARCHAR},
      </if>
      <if test="recruitContributionTwo != null" >
        recruit_contribution_two = #{recruitContributionTwo,jdbcType=VARCHAR},
      </if>
      <if test="isJob != null" >
        is_job = #{isJob,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.it.demo.model.User" >
    update user_data
    set user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      entry_grade = #{entryGrade,jdbcType=VARCHAR},
      entry_salary = #{entrySalary,jdbcType=DECIMAL},
      current_grade = #{currentGrade,jdbcType=VARCHAR},
      current_salary = #{currentSalary,jdbcType=DECIMAL},
      department = #{department,jdbcType=VARCHAR},
      psot = #{psot,jdbcType=VARCHAR},
      lately_change_salary_time = #{latelyChangeSalaryTime,jdbcType=VARCHAR},
      ontrial_salary = #{ontrialSalary,jdbcType=DECIMAL},
      graduation_school = #{graduationSchool,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      graduation_time = #{graduationTime,jdbcType=TIMESTAMP},
      entry_before_years = #{entryBeforeYears,jdbcType=DECIMAL},
      entry_remarks = #{entryRemarks,jdbcType=VARCHAR},
      current_years = #{currentYears,jdbcType=DECIMAL},
      whether_extrapolation = #{whetherExtrapolation,jdbcType=VARCHAR},
      recruit_contribution_one = #{recruitContributionOne,jdbcType=VARCHAR},
      recruit_contribution_two = #{recruitContributionTwo,jdbcType=VARCHAR},
      is_job = #{isJob,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>